1. count라는 메서드는 문자열 내부에서 특정 문자가 등장하는 횟수를 알려줌

문자열.count(x)

문자열.count(x, start)

문자열.count(x, start, end)

2. 위의 count메서드가 문자열 내부에 특정 문자가 몇 개 있는지 세어주는 메서드였다면, 
find 메서드는 특정 문자가 존재하는지 확인하고 존재하는 위치의 index를 찾아주는 메서드

문자열.find(x)

문자열.find(x, start)

문자열.find(x, start, end)

//

문자열.rfind(x)

문자열.rfind(x, start)

문자열.rfind(x, start, end)

문자열에서 rfind 메서드를 이용해서 찾고 싶은 문자 x를 입력하면 그 문자가 존재하는 인덱스를 반환합니다.

만약 문자가 없다면 -1을 반환합니다.

rfind 메서드는 찾는 문자가 여러 개 있다면 맨 마지막 인덱스를 반환합니다.

//

문자열.upper()

문자열.lower()

문자열.uppper() 메서드는 문자열의 모든 문자를 대문자로 바꿔주는 메서드 입니다.

문자열.lower() 메서드는 문자열의 모든 문자를 소문자로 바꿔주는 메서드입니다.

//

문자열.swapcase()

문자열.swapcase() 메서드는 문자열의 소문자는 대문자로, 대문자는 소문자로 서로 바꿔주는 메서드입니다.

//

문자열.capitalize()

capitalize() 메서드는 첫 문자만 대문자로 변경하고 나머지 문자열은 모두 소문자로 변경한 문자열을 반환합니다.

//

문자열.title()

title() 메서드는 각 단어의 앞 문자를 대문자로 바꿔주고 다른 문자들은 소문자로 변경한 문자열을 반환합니다.

//

문자열.lstrip()

문자열.rstrip()

lstrip() 메서드는 기존 문자열에 있는 왼쪽 left 공백을 제거한 문자열을 반환하는 메서드입니다.

rstrip() 메서드는 기존 문자열에 있는 오른쪽 right 공백을 제거한 문자열을 반환하는 메서드입니다.

//

문자열.strip()

strip() 메서드는 원래 문자열의 왼쪽, 오른쪽 그러니까 양쪽의 공백을 제거한 문자열을 반환하는 메서드입니다.

//

문자열.replace(old, new)

문자열.replace(old, new, count)

replace(old, new) 문자열 메서드는 기존 문자에 있는 문자 old를 new 문자로 변경해서, 그 변경한 문자열을 반환하는 메서드입니다.

두 번째에 정의되어있는 replace(old, new, count)는 해당 문자가 여러 개 일 때 일부만 변경하고 싶을 때 사용합니다. count의 개수만큼만 old 문자를 new 문자로 변경해 줍니다.

//

문자열 내장 함수 : zfill, rjust, ljust, center

문자열.zfill(정수) : 문자열의 길이가 지정된 정수가 될 때까지 문자열 왼쪽에 0을 채움
문자열.rjust(정수, 원하는 값) : 문자열의 길이가 지정된 정수가 될 때까지 문자열 왼쪽에 원하는 값을 채움
문자열.ljust(정수, 원하는 값) : 문자열의 길이가 지정된 정수가 될 때까지 문자열 오른쪽에 원하는 값을 채움
문자열.center(정수, 원하는 값) : 문자열의 길이가 지정된 정수가 될 때까지 문자열 양쪽에 원하는 값을 채움

